stages:
    - dependencies
    - build
    - check

image: registry.gitlab.com/sosy-lab/software/llvm-j/test:latest

variables:
    LLVM_VERSION: "3.9.1"
    IVY_CACHE_DIR: "${CI_PROJECT_DIR}/.ivy2"
    ANT_PROPS_TEST: "-DskipBuild=true"
    GH_REF: "github.com/sosy-lab/llvm-j"

cache:
    key: "$CI_JOB_NAME"
    paths:
        - .ivy2/
        - lib/java/

.cache_pull: &cache_pull
    cache:
        key: "$CI_JOB_NAME"
        paths:
            - .ivy2/
            - lib/java/
        policy: pull

# For checks that need the binaries
.binary_check: &binary_check
    <<: *cache_pull
    stage: check
    dependencies:
        - build-llvm-j

# For checks that only need the source code, not the binaries
.source_check: &source_check
    <<: *cache_pull
    stage: check
    # No dependencies
    dependencies:

resolve-dependencies:
    stage: dependencies
    script: "ant build-dependencies"

build-llvm-j:
    <<: *cache_pull
    stage: build
    script: "ant build"
    artifacts:
        paths:
            - bin/
            - "*.jar"
        expire_in: 3 days

build-llvm-j-ecj:
    <<: *cache_pull
    stage: build
    script: "ant build-project-ecj"
    artifacts:
        paths:
            - bin/
            - "*.jar"
        expire_in: 3 days

download-lib:
    <<: *cache_pull
    stage: build
    script: "ant -verbose download-library -Dllvm.version=$LLVM_VERSION"
    artifacts:
        paths:
            - lib/native

create-javadoc:
    <<: *source_check
    script: "ant $ANT_PROPS_TEST javadoc"

checkstyle:
    <<: *source_check
    script: "ant $ANT_PROPS_TEST run-checkstyle -Dcheckstyle.output=plain && cat Checkstyle*.xml && test $(cat Checkstyle*xml | grep -vic audit) -eq 0"

check-format:
    <<: *source_check
    script: "ant $ANT_PROPS_TEST format-source && git diff -s --exit-code"

spotbugs:
    <<: *binary_check
    script: 'ant $ANT_PROPS_TEST spotbugs -Dspotbugs.output=text && cat SpotBugs.xml && test \! -s SpotBugs.xml'

unit-tests:
    <<: *binary_check
    script: "ant $ANT_PROPS_TEST -verbose unit-tests"
